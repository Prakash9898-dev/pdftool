name: Run n8n with ngrok

on:
  workflow_dispatch: # Allows manual triggering of the workflow
  push:
    branches:
      - main # Triggers on push to the main branch

jobs:
  run-n8n:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Install Node.js (required for npx if you choose that method)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18' # Adjust based on n8n requirements

      # Install ngrok
      - name: Install ngrok
        run: |
          curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
          echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
          sudo apt update && sudo apt install ngrok

      # Configure ngrok with your auth token
      - name: Configure ngrok
        run: |
          ngrok config add-authtoken ${{ secrets.NGROK_AUTH_TOKEN }}
        env:
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

      # Create n8n data volume and start n8n with Docker
      - name: Start n8n
        run: |
          docker volume create n8n_data
          docker run -d --name n8n -p 5678:5678 -v n8n_data:/home/node/.n8n docker.n8n.io/n8nio/n8n

      # Start ngrok to tunnel n8n
      - name: Start ngrok
        run: |
          ngrok http 5678 --log=stdout > ngrok.log &
          sleep 5 # Wait for ngrok to initialize
          NGROK_URL=$(curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')
          echo "n8n is available at: $NGROK_URL"
          echo "NGROK_URL=$NGROK_URL" >> $GITHUB_ENV

      # Keep the workflow running to interact with n8n (optional)
      - name: Keep workflow alive
        run: |
          echo "n8n is running at ${{ env.NGROK_URL }}"
          sleep 300 # Keeps the job alive for 5 minutes; adjust as needed

      # Optional: Stop n8n and cleanup
      - name: Cleanup
        if: always() # Runs even if previous steps fail
        run: |
          docker stop n8n
          docker rm n8n
